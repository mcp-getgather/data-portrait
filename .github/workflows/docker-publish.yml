name: Publish Container Image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-local-container:
    runs-on: ubuntu-22.04
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: docker build -t data-portrait .

      - run: docker run -p 3000:3000 --name data-portrait -d data-portrait
        timeout-minutes: 3

      - name: Debug container status
        run: |
          echo "=== Container Status ==="
          docker ps -a
          echo ""
          echo "=== Container Logs ==="
          docker logs data-portrait
          echo ""
          echo "=== Test Health Endpoint ==="
          sleep 10
          echo "Attempting health check..."
          curl -v http://localhost:3000/health || echo "Health endpoint failed"
          echo ""
          echo "=== Port Check ==="
          ss -tlnp | grep :3000 || echo "Port 3000 not listening"

      - name: Run the health check validation
        run: while ! curl -s 'http://localhost:3000/health' | grep 'OK'; do sleep 1; done
        timeout-minutes: 3

      - name: Get container logs
        run: docker logs data-portrait
        if: always()

  build-and-publish:
    runs-on: ubuntu-22.04
    needs: test-local-container
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
